version: '3.8'

services:
  front:
    build:
      context: ../front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      TZ: "Asia/Tokyo"
    volumes:
      - ../front:/app
      - /app/node_modules
    networks:
      - live-network

  back:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      TZ: "Asia/Tokyo"
    volumes:
      - .:/app
    networks:
      - live-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: "Asia/Tokyo"
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - live-network

  minio:
    image: minio/minio
    container_name: minio
    environment:
      STORAGE_ACCESS_KEY: "minioadmin"
      STORAGE_SECRET_KEY: "minioadmin"
      TZ: "Asia/Tokyo"
    volumes:
      - minio-data:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    networks:
      - live-network

  ai:
    build:
      context: ../ai
      dockerfile: Dockerfile
    env_file:
      - ../ai/.env
    ports:
      - "5001:5000"
    volumes:
      - ../ai:/app
      - ~/.aws:/root/.aws
    networks:
      - live-network
    environment:
      TZ: "Asia/Tokyo"

networks:
  live-network:
    driver: bridge

volumes:
  db_data:
  minio-data: